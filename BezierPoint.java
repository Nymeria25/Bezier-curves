package source;import java.util.StringTokenizer;import java.awt.Point;public class BezierPoint{    double x,y;        static double threshold = 5.0;    static double radius = 5.0;            public BezierPoint(){	this( 0.0, 0.0 );    }    public BezierPoint( BezierPoint point ){	this( point.x, point.y );    }        public BezierPoint( double x, double y ){        this.x = x;        this.y = y;	    }    public BezierPoint( String str ){        String tmp = str.replace('{',' ').replace('}',' ');        StringTokenizer st = new StringTokenizer(tmp,",");		this.x = Integer.parseInt( st.nextToken().trim() );	this.y = Integer.parseInt( st.nextToken().trim() );    }	    public double distance( int x, int y ){	return Math.sqrt( (this.x - x)*(this.x - x) + (this.y - y)*(this.y - y) );    }		    public double distance( Point point ){	return Math.sqrt( (this.x - point.x)*(this.x - point.x) + (this.y - point.y)*(this.y - point.y) );    }	    public double distance( BezierPoint point ){	return Math.sqrt( (this.x - point.x)*(this.x - point.x) + (this.y - point.y)*(this.y - point.y) );    }		    public BezierPoint scale( double t ){	return new BezierPoint( this.x*t, this.y*t );    }    public void setPoint( double x, double y ){	this.x = x;	this.y = y;    }    @Override    public String toString(){	return "{"+(int)x+","+(int)y+"}";     }    public void translate( double dx, double dy ){	this.x += dx;	this.y += dy;    }}